"""init schema pos

Revision ID: 929a015d5750
Revises: 
Create Date: 2025-08-15 20:22:41.591980

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '929a015d5750'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cash_denominations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('value', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pos_day',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('business_date', sa.DateTime(), nullable=False),
    sa.Column('store_id', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('store_id', 'business_date', name='uq_store_day')
    )
    op.create_table('pos_session',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.String(), nullable=False),
    sa.Column('terminal_id', sa.String(), nullable=False),
    sa.Column('user_open_id', sa.String(), nullable=False),
    sa.Column('opened_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('user_close_id', sa.String(), nullable=True),
    sa.Column('closed_at', sa.DateTime(), nullable=True),
    sa.Column('idempotency_open', sa.String(), nullable=True),
    sa.Column('idempotency_close', sa.String(), nullable=True),
    sa.Column('audit_ref', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('idempotency_close'),
    sa.UniqueConstraint('idempotency_open')
    )
    op.create_table('price_list',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('valid_from', sa.DateTime(), nullable=True),
    sa.Column('valid_to', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sku', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('barcode_main', sa.String(), nullable=True),
    sa.Column('uom', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_product_barcode_main'), 'product', ['barcode_main'], unique=True)
    op.create_index(op.f('ix_product_sku'), 'product', ['sku'], unique=True)
    op.create_table('segment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('stock_location',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('audit_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('entity', sa.String(), nullable=True),
    sa.Column('entity_id', sa.String(), nullable=True),
    sa.Column('action', sa.String(), nullable=True),
    sa.Column('payload_json', sa.String(), nullable=True),
    sa.Column('ip', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['pos_session.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cash_count',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('stage', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('by_user', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['pos_session.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('coupon',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('value', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('min_amount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('max_uses', sa.Integer(), nullable=True),
    sa.Column('used_count', sa.Integer(), nullable=True),
    sa.Column('valid_from', sa.DateTime(), nullable=True),
    sa.Column('valid_to', sa.DateTime(), nullable=True),
    sa.Column('valid_days_mask', sa.Integer(), nullable=True),
    sa.Column('valid_hours_json', sa.String(), nullable=True),
    sa.Column('segment_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['segment_id'], ['segment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_coupon_code'), 'coupon', ['code'], unique=True)
    op.create_table('customer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('external_ref', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('segment_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['segment_id'], ['segment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('price_list_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('price_list_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['price_list_id'], ['price_list.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('price_list_id', 'product_id', name='uq_price_list_product')
    )
    op.create_table('product_barcode',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('barcode', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_product_barcode_barcode'), 'product_barcode', ['barcode'], unique=True)
    op.create_table('stock_move',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('location_id_from', sa.Integer(), nullable=True),
    sa.Column('location_id_to', sa.Integer(), nullable=True),
    sa.Column('qty', sa.Numeric(precision=12, scale=3), nullable=False),
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('ref_type', sa.String(), nullable=True),
    sa.Column('ref_id', sa.String(), nullable=True),
    sa.Column('at', sa.DateTime(), nullable=True),
    sa.Column('by_user', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['location_id_from'], ['stock_location.id'], ),
    sa.ForeignKeyConstraint(['location_id_to'], ['stock_location.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stock_quant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('qty_on_hand', sa.Numeric(precision=12, scale=3), nullable=True),
    sa.Column('qty_reserved', sa.Numeric(precision=12, scale=3), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['stock_location.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('product_id', 'location_id', name='uq_quant')
    )
    op.create_table('cash_count_line',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cash_count_id', sa.Integer(), nullable=False),
    sa.Column('denomination_id', sa.Integer(), nullable=False),
    sa.Column('units', sa.Integer(), nullable=True),
    sa.Column('subtotal', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['cash_count_id'], ['cash_count.id'], ),
    sa.ForeignKeyConstraint(['denomination_id'], ['cash_denominations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cash_count_id', 'denomination_id', name='uq_count_line')
    )
    op.create_table('coupon_audit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('coupon_id', sa.Integer(), nullable=False),
    sa.Column('event', sa.String(), nullable=False),
    sa.Column('at', sa.DateTime(), nullable=True),
    sa.Column('by_user', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['coupon_id'], ['coupon.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pos_order',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('order_no', sa.String(), nullable=True),
    sa.Column('business_date', sa.DateTime(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('price_list_id', sa.Integer(), nullable=False),
    sa.Column('subtotal', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('discount_total', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('tax_total', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('total', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('undo_until_at', sa.DateTime(), nullable=True),
    sa.Column('idempotency_key', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ),
    sa.ForeignKeyConstraint(['price_list_id'], ['price_list.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['pos_session.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pos_order_idempotency_key'), 'pos_order', ['idempotency_key'], unique=True)
    op.create_index(op.f('ix_pos_order_order_no'), 'pos_order', ['order_no'], unique=True)
    op.create_table('pos_order_coupon',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('coupon_id', sa.Integer(), nullable=True),
    sa.Column('code_snapshot', sa.String(), nullable=True),
    sa.Column('value_applied', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['coupon_id'], ['coupon.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['pos_order.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pos_order_line',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('qty', sa.Numeric(precision=12, scale=3), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('discount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('line_total', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['pos_order.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pos_payment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('method', sa.String(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('captured_at', sa.DateTime(), nullable=True),
    sa.Column('idempotency_key', sa.String(), nullable=True),
    sa.Column('ref_ext', sa.String(), nullable=True),
    sa.Column('by_user', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['pos_order.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pos_payment_idempotency_key'), 'pos_payment', ['idempotency_key'], unique=True)
    op.create_table('pos_payment_split',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('method', sa.String(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['payment_id'], ['pos_payment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pos_payment_split')
    op.drop_index(op.f('ix_pos_payment_idempotency_key'), table_name='pos_payment')
    op.drop_table('pos_payment')
    op.drop_table('pos_order_line')
    op.drop_table('pos_order_coupon')
    op.drop_index(op.f('ix_pos_order_order_no'), table_name='pos_order')
    op.drop_index(op.f('ix_pos_order_idempotency_key'), table_name='pos_order')
    op.drop_table('pos_order')
    op.drop_table('coupon_audit')
    op.drop_table('cash_count_line')
    op.drop_table('stock_quant')
    op.drop_table('stock_move')
    op.drop_index(op.f('ix_product_barcode_barcode'), table_name='product_barcode')
    op.drop_table('product_barcode')
    op.drop_table('price_list_item')
    op.drop_table('customer')
    op.drop_index(op.f('ix_coupon_code'), table_name='coupon')
    op.drop_table('coupon')
    op.drop_table('cash_count')
    op.drop_table('audit_log')
    op.drop_table('stock_location')
    op.drop_table('segment')
    op.drop_index(op.f('ix_product_sku'), table_name='product')
    op.drop_index(op.f('ix_product_barcode_main'), table_name='product')
    op.drop_table('product')
    op.drop_table('price_list')
    op.drop_table('pos_session')
    op.drop_table('pos_day')
    op.drop_table('cash_denominations')
    # ### end Alembic commands ###
