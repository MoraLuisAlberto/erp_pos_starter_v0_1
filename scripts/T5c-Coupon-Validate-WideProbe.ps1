param(
  [string] = "http://127.0.0.1:8010",
  [string]param(
  [string] = "http://127.0.0.1:8010",
  [string]from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) = "TEST10",
  [int] = 233366,
  [decimal] = 129
)

Write-Host "== T5c: /pos/coupon/validate -- WIDE PROBE =="

function J(){  | ConvertTo-Json -Depth 20 -Compress }

function POST-WR([string], {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}, [hashtable]=){
   = [ordered]@{ ok=False; status=; text=; json= }
  try {
     = Invoke-WebRequest -Method POST -Uri  -Body (J {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}) -ContentType "application/json" -Headers  -ErrorAction Stop
    .ok = True
    .status = .StatusCode.value__
    .text = .Content
    try { .json = .Content | ConvertFrom-Json } catch {}
    return
  } catch {
     = .Exception.Response
    if () {
      try { .status = [int].StatusCode } catch {}
      try {
         = New-Object System.IO.StreamReader(.GetResponseStream())
        from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 = .ReadToEnd()
        .text = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])

        try { .json = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 | ConvertFrom-Json } catch {}
      } catch {}
    } else {
      .text = .Exception.Message
    }
    return
  }
}

# ---- setup: session + draft (para tener session_id/order_id/total) ----
Write-Host ""
Write-Host "-- Setup: open session"
 = @{ pos_id=1; cashier_id=1; opening_cash=0 }
 = POST-WR "/session/open"
if (-not .ok) { Write-Error "session/open failed:  "; exit 1 }
 =
try {
   = .json.sid
  if (-not ) {  = .json.session_id }
  if (-not  -and (.json -is [psobject])) {  = .json.id }
} catch {}
if (-not ) { Write-Error "cannot extract session_id"; exit 2 }
Write-Host ("SID: {0}" -f )

Write-Host ""
Write-Host "-- Setup: draft"
{
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
} = @{
  customer_id   =
  session_id    =
  price_list_id = 1
  items         = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
}
 = POST-WR "/pos/order/draft" {
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
}
if (-not .ok) { Write-Error "draft failed:  "; exit 3 }
 = ;  = ; =
try {
   = .json.order_id; if (-not ) {  = .json.id }
     = .json.total
  = .json.subtotal
} catch {}
Write-Host ("order_id: {0}" -f )
Write-Host ("total: {0}" -f ())

# ---- variantes enriquecidas ----
 = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
 = @(
  @{ note="minimal: code"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) } },
  @{ note="code+customer"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); customer_id= } },
  @{ note="code+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); amount=[decimal] } },
  @{ note="code+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); items= } },
  @{ note="code+sid+oid"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id= } },
  @{ note="code+sid+oid+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0) } },
  @{ note="code+sid+oid+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; items= } },
  @{ note="code+sid+oid+cust"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id= } },
  @{ note="FULL-1: code+sid+oid+cust+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0) } },
  @{ note="FULL-2: +items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0); items= } },
  @{ note="ALT: coupon object"; body=@{ coupon=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) }; session_id=; order_id=; amount=(0) } },
  @{ note="ALT: intent validate_only"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0); validate_only=True } },
  @{ note="ALT: price_list_id"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; price_list_id=1; amount=(0) } }
)

# ---- ejecutar ----
=0
foreach( in ){
  ++
  Write-Host ""
  Write-Host ("-- Try {0}: {1}" -f , .note)
  Write-Host ("Body: " + (J .body))
  {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}} = POST-WR "/pos/coupon/validate" .body
  Write-Host ("Status: {0}" -f ((n/a)))
  if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok -and {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
    Write-Host "(JSON)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Got 200 with note: "
    exit 0
  } elseif ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok) {
    Write-Host "(TEXT)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Non-JSON 2xx with note: "
    exit 0
  } else {
    if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
      Write-Host "(JSON err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    } else {
      Write-Host "(TEXT err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    }
  }
}

Write-Host ""
Write-Host "== RESULT =="
Write-Host "No 2xx received. See errors above."
exit 10 = "TEST10",
  [int] = 233366,
  [decimal] = 129
)

Write-Host "== T5c: /pos/coupon/validate -- WIDE PROBE (v2) =="

function J(){  | ConvertTo-Json -Depth 20 -Compress }

function POST-WR([string], {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}, [hashtable]=){
   = [ordered]@{ ok=False; status=; text=; json=; ctype= }
  try {
     = Invoke-WebRequest -Method POST -Uri  -Body (J {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}) -ContentType "application/json" -Headers  -ErrorAction Stop
    .ok = True
    try { .status = [int].StatusCode } catch {}
    try { .ctype  = .Headers["Content-Type"] } catch {}
    .text = .Content
    try { .json = .Content | ConvertFrom-Json } catch {}
    return
  } catch {
     = .Exception.Response
    if () {
      try { .status = [int].StatusCode } catch {}
      try { .ctype  = .Headers["Content-Type"] } catch {}
      try {
         = New-Object System.IO.StreamReader(.GetResponseStream())
        from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 = .ReadToEnd()
        .text = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])

        try { .json = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 | ConvertFrom-Json } catch {}
      } catch {}
    } else {
      .text = .Exception.Message
    }
    return
  }
}

# ---- setup: session + draft ----
Write-Host ""
Write-Host "-- Setup: open session"
 = @{ pos_id=1; cashier_id=1; opening_cash=0 }
 = POST-WR "/session/open"
if (-not .ok) { Write-Error ("session/open failed: {0} {1}" -f .status, .text); exit 1 }
 =
try {
   = .json.sid
  if (-not ) {  = .json.session_id }
  if (-not  -and (.json -is [psobject])) {  = .json.id }
} catch {}
if (-not ) { Write-Error "cannot extract session_id"; exit 2 }
Write-Host ("SID: {0}" -f )

Write-Host ""
Write-Host "-- Setup: draft"
{
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
} = @{
  customer_id   =
  session_id    =
  price_list_id = 1
  items         = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
}
 = POST-WR "/pos/order/draft" {
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
}
if (-not .ok) { Write-Error ("draft failed: {0} {1}" -f .status, .text); exit 3 }
 = ;  =
try {
   = .json.order_id; if (-not ) {  = .json.id }
     = .json.total
} catch {}
Write-Host ("order_id: {0}" -f )
Write-Host ("total: {0}" -f ())

# ---- variants ----
 = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
 = @(
  @{ note="minimal: code"; body=@{ code=param(
  [string] = "http://127.0.0.1:8010",
  [string]from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) = "TEST10",
  [int] = 233366,
  [decimal] = 129
)

Write-Host "== T5c: /pos/coupon/validate -- WIDE PROBE =="

function J(){  | ConvertTo-Json -Depth 20 -Compress }

function POST-WR([string], {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}, [hashtable]=){
   = [ordered]@{ ok=False; status=; text=; json= }
  try {
     = Invoke-WebRequest -Method POST -Uri  -Body (J {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}) -ContentType "application/json" -Headers  -ErrorAction Stop
    .ok = True
    .status = .StatusCode.value__
    .text = .Content
    try { .json = .Content | ConvertFrom-Json } catch {}
    return
  } catch {
     = .Exception.Response
    if () {
      try { .status = [int].StatusCode } catch {}
      try {
         = New-Object System.IO.StreamReader(.GetResponseStream())
        from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 = .ReadToEnd()
        .text = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])

        try { .json = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 | ConvertFrom-Json } catch {}
      } catch {}
    } else {
      .text = .Exception.Message
    }
    return
  }
}

# ---- setup: session + draft (para tener session_id/order_id/total) ----
Write-Host ""
Write-Host "-- Setup: open session"
 = @{ pos_id=1; cashier_id=1; opening_cash=0 }
 = POST-WR "/session/open"
if (-not .ok) { Write-Error "session/open failed:  "; exit 1 }
 =
try {
   = .json.sid
  if (-not ) {  = .json.session_id }
  if (-not  -and (.json -is [psobject])) {  = .json.id }
} catch {}
if (-not ) { Write-Error "cannot extract session_id"; exit 2 }
Write-Host ("SID: {0}" -f )

Write-Host ""
Write-Host "-- Setup: draft"
{
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
} = @{
  customer_id   =
  session_id    =
  price_list_id = 1
  items         = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
}
 = POST-WR "/pos/order/draft" {
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
}
if (-not .ok) { Write-Error "draft failed:  "; exit 3 }
 = ;  = ; =
try {
   = .json.order_id; if (-not ) {  = .json.id }
     = .json.total
  = .json.subtotal
} catch {}
Write-Host ("order_id: {0}" -f )
Write-Host ("total: {0}" -f ())

# ---- variantes enriquecidas ----
 = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
 = @(
  @{ note="minimal: code"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) } },
  @{ note="code+customer"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); customer_id= } },
  @{ note="code+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); amount=[decimal] } },
  @{ note="code+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); items= } },
  @{ note="code+sid+oid"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id= } },
  @{ note="code+sid+oid+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0) } },
  @{ note="code+sid+oid+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; items= } },
  @{ note="code+sid+oid+cust"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id= } },
  @{ note="FULL-1: code+sid+oid+cust+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0) } },
  @{ note="FULL-2: +items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0); items= } },
  @{ note="ALT: coupon object"; body=@{ coupon=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) }; session_id=; order_id=; amount=(0) } },
  @{ note="ALT: intent validate_only"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0); validate_only=True } },
  @{ note="ALT: price_list_id"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; price_list_id=1; amount=(0) } }
)

# ---- ejecutar ----
=0
foreach( in ){
  ++
  Write-Host ""
  Write-Host ("-- Try {0}: {1}" -f , .note)
  Write-Host ("Body: " + (J .body))
  {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}} = POST-WR "/pos/coupon/validate" .body
  Write-Host ("Status: {0}" -f ((n/a)))
  if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok -and {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
    Write-Host "(JSON)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Got 200 with note: "
    exit 0
  } elseif ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok) {
    Write-Host "(TEXT)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Non-JSON 2xx with note: "
    exit 0
  } else {
    if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
      Write-Host "(JSON err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    } else {
      Write-Host "(TEXT err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    }
  }
}

Write-Host ""
Write-Host "== RESULT =="
Write-Host "No 2xx received. See errors above."
exit 10 } },
  @{ note="code+customer"; body=@{ code=param(
  [string] = "http://127.0.0.1:8010",
  [string]from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) = "TEST10",
  [int] = 233366,
  [decimal] = 129
)

Write-Host "== T5c: /pos/coupon/validate -- WIDE PROBE =="

function J(){  | ConvertTo-Json -Depth 20 -Compress }

function POST-WR([string], {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}, [hashtable]=){
   = [ordered]@{ ok=False; status=; text=; json= }
  try {
     = Invoke-WebRequest -Method POST -Uri  -Body (J {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}) -ContentType "application/json" -Headers  -ErrorAction Stop
    .ok = True
    .status = .StatusCode.value__
    .text = .Content
    try { .json = .Content | ConvertFrom-Json } catch {}
    return
  } catch {
     = .Exception.Response
    if () {
      try { .status = [int].StatusCode } catch {}
      try {
         = New-Object System.IO.StreamReader(.GetResponseStream())
        from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 = .ReadToEnd()
        .text = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])

        try { .json = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 | ConvertFrom-Json } catch {}
      } catch {}
    } else {
      .text = .Exception.Message
    }
    return
  }
}

# ---- setup: session + draft (para tener session_id/order_id/total) ----
Write-Host ""
Write-Host "-- Setup: open session"
 = @{ pos_id=1; cashier_id=1; opening_cash=0 }
 = POST-WR "/session/open"
if (-not .ok) { Write-Error "session/open failed:  "; exit 1 }
 =
try {
   = .json.sid
  if (-not ) {  = .json.session_id }
  if (-not  -and (.json -is [psobject])) {  = .json.id }
} catch {}
if (-not ) { Write-Error "cannot extract session_id"; exit 2 }
Write-Host ("SID: {0}" -f )

Write-Host ""
Write-Host "-- Setup: draft"
{
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
} = @{
  customer_id   =
  session_id    =
  price_list_id = 1
  items         = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
}
 = POST-WR "/pos/order/draft" {
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
}
if (-not .ok) { Write-Error "draft failed:  "; exit 3 }
 = ;  = ; =
try {
   = .json.order_id; if (-not ) {  = .json.id }
     = .json.total
  = .json.subtotal
} catch {}
Write-Host ("order_id: {0}" -f )
Write-Host ("total: {0}" -f ())

# ---- variantes enriquecidas ----
 = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
 = @(
  @{ note="minimal: code"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) } },
  @{ note="code+customer"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); customer_id= } },
  @{ note="code+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); amount=[decimal] } },
  @{ note="code+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); items= } },
  @{ note="code+sid+oid"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id= } },
  @{ note="code+sid+oid+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0) } },
  @{ note="code+sid+oid+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; items= } },
  @{ note="code+sid+oid+cust"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id= } },
  @{ note="FULL-1: code+sid+oid+cust+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0) } },
  @{ note="FULL-2: +items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0); items= } },
  @{ note="ALT: coupon object"; body=@{ coupon=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) }; session_id=; order_id=; amount=(0) } },
  @{ note="ALT: intent validate_only"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0); validate_only=True } },
  @{ note="ALT: price_list_id"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; price_list_id=1; amount=(0) } }
)

# ---- ejecutar ----
=0
foreach( in ){
  ++
  Write-Host ""
  Write-Host ("-- Try {0}: {1}" -f , .note)
  Write-Host ("Body: " + (J .body))
  {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}} = POST-WR "/pos/coupon/validate" .body
  Write-Host ("Status: {0}" -f ((n/a)))
  if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok -and {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
    Write-Host "(JSON)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Got 200 with note: "
    exit 0
  } elseif ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok) {
    Write-Host "(TEXT)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Non-JSON 2xx with note: "
    exit 0
  } else {
    if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
      Write-Host "(JSON err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    } else {
      Write-Host "(TEXT err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    }
  }
}

Write-Host ""
Write-Host "== RESULT =="
Write-Host "No 2xx received. See errors above."
exit 10; customer_id= } },
  @{ note="code+amount"; body=@{ code=param(
  [string] = "http://127.0.0.1:8010",
  [string]from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) = "TEST10",
  [int] = 233366,
  [decimal] = 129
)

Write-Host "== T5c: /pos/coupon/validate -- WIDE PROBE =="

function J(){  | ConvertTo-Json -Depth 20 -Compress }

function POST-WR([string], {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}, [hashtable]=){
   = [ordered]@{ ok=False; status=; text=; json= }
  try {
     = Invoke-WebRequest -Method POST -Uri  -Body (J {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}) -ContentType "application/json" -Headers  -ErrorAction Stop
    .ok = True
    .status = .StatusCode.value__
    .text = .Content
    try { .json = .Content | ConvertFrom-Json } catch {}
    return
  } catch {
     = .Exception.Response
    if () {
      try { .status = [int].StatusCode } catch {}
      try {
         = New-Object System.IO.StreamReader(.GetResponseStream())
        from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 = .ReadToEnd()
        .text = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])

        try { .json = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 | ConvertFrom-Json } catch {}
      } catch {}
    } else {
      .text = .Exception.Message
    }
    return
  }
}

# ---- setup: session + draft (para tener session_id/order_id/total) ----
Write-Host ""
Write-Host "-- Setup: open session"
 = @{ pos_id=1; cashier_id=1; opening_cash=0 }
 = POST-WR "/session/open"
if (-not .ok) { Write-Error "session/open failed:  "; exit 1 }
 =
try {
   = .json.sid
  if (-not ) {  = .json.session_id }
  if (-not  -and (.json -is [psobject])) {  = .json.id }
} catch {}
if (-not ) { Write-Error "cannot extract session_id"; exit 2 }
Write-Host ("SID: {0}" -f )

Write-Host ""
Write-Host "-- Setup: draft"
{
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
} = @{
  customer_id   =
  session_id    =
  price_list_id = 1
  items         = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
}
 = POST-WR "/pos/order/draft" {
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
}
if (-not .ok) { Write-Error "draft failed:  "; exit 3 }
 = ;  = ; =
try {
   = .json.order_id; if (-not ) {  = .json.id }
     = .json.total
  = .json.subtotal
} catch {}
Write-Host ("order_id: {0}" -f )
Write-Host ("total: {0}" -f ())

# ---- variantes enriquecidas ----
 = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
 = @(
  @{ note="minimal: code"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) } },
  @{ note="code+customer"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); customer_id= } },
  @{ note="code+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); amount=[decimal] } },
  @{ note="code+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); items= } },
  @{ note="code+sid+oid"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id= } },
  @{ note="code+sid+oid+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0) } },
  @{ note="code+sid+oid+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; items= } },
  @{ note="code+sid+oid+cust"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id= } },
  @{ note="FULL-1: code+sid+oid+cust+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0) } },
  @{ note="FULL-2: +items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0); items= } },
  @{ note="ALT: coupon object"; body=@{ coupon=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) }; session_id=; order_id=; amount=(0) } },
  @{ note="ALT: intent validate_only"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0); validate_only=True } },
  @{ note="ALT: price_list_id"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; price_list_id=1; amount=(0) } }
)

# ---- ejecutar ----
=0
foreach( in ){
  ++
  Write-Host ""
  Write-Host ("-- Try {0}: {1}" -f , .note)
  Write-Host ("Body: " + (J .body))
  {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}} = POST-WR "/pos/coupon/validate" .body
  Write-Host ("Status: {0}" -f ((n/a)))
  if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok -and {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
    Write-Host "(JSON)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Got 200 with note: "
    exit 0
  } elseif ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok) {
    Write-Host "(TEXT)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Non-JSON 2xx with note: "
    exit 0
  } else {
    if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
      Write-Host "(JSON err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    } else {
      Write-Host "(TEXT err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    }
  }
}

Write-Host ""
Write-Host "== RESULT =="
Write-Host "No 2xx received. See errors above."
exit 10; amount=[decimal] } },
  @{ note="code+items"; body=@{ code=param(
  [string] = "http://127.0.0.1:8010",
  [string]from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) = "TEST10",
  [int] = 233366,
  [decimal] = 129
)

Write-Host "== T5c: /pos/coupon/validate -- WIDE PROBE =="

function J(){  | ConvertTo-Json -Depth 20 -Compress }

function POST-WR([string], {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}, [hashtable]=){
   = [ordered]@{ ok=False; status=; text=; json= }
  try {
     = Invoke-WebRequest -Method POST -Uri  -Body (J {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}) -ContentType "application/json" -Headers  -ErrorAction Stop
    .ok = True
    .status = .StatusCode.value__
    .text = .Content
    try { .json = .Content | ConvertFrom-Json } catch {}
    return
  } catch {
     = .Exception.Response
    if () {
      try { .status = [int].StatusCode } catch {}
      try {
         = New-Object System.IO.StreamReader(.GetResponseStream())
        from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 = .ReadToEnd()
        .text = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])

        try { .json = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 | ConvertFrom-Json } catch {}
      } catch {}
    } else {
      .text = .Exception.Message
    }
    return
  }
}

# ---- setup: session + draft (para tener session_id/order_id/total) ----
Write-Host ""
Write-Host "-- Setup: open session"
 = @{ pos_id=1; cashier_id=1; opening_cash=0 }
 = POST-WR "/session/open"
if (-not .ok) { Write-Error "session/open failed:  "; exit 1 }
 =
try {
   = .json.sid
  if (-not ) {  = .json.session_id }
  if (-not  -and (.json -is [psobject])) {  = .json.id }
} catch {}
if (-not ) { Write-Error "cannot extract session_id"; exit 2 }
Write-Host ("SID: {0}" -f )

Write-Host ""
Write-Host "-- Setup: draft"
{
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
} = @{
  customer_id   =
  session_id    =
  price_list_id = 1
  items         = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
}
 = POST-WR "/pos/order/draft" {
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
}
if (-not .ok) { Write-Error "draft failed:  "; exit 3 }
 = ;  = ; =
try {
   = .json.order_id; if (-not ) {  = .json.id }
     = .json.total
  = .json.subtotal
} catch {}
Write-Host ("order_id: {0}" -f )
Write-Host ("total: {0}" -f ())

# ---- variantes enriquecidas ----
 = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
 = @(
  @{ note="minimal: code"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) } },
  @{ note="code+customer"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); customer_id= } },
  @{ note="code+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); amount=[decimal] } },
  @{ note="code+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); items= } },
  @{ note="code+sid+oid"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id= } },
  @{ note="code+sid+oid+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0) } },
  @{ note="code+sid+oid+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; items= } },
  @{ note="code+sid+oid+cust"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id= } },
  @{ note="FULL-1: code+sid+oid+cust+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0) } },
  @{ note="FULL-2: +items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0); items= } },
  @{ note="ALT: coupon object"; body=@{ coupon=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) }; session_id=; order_id=; amount=(0) } },
  @{ note="ALT: intent validate_only"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0); validate_only=True } },
  @{ note="ALT: price_list_id"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; price_list_id=1; amount=(0) } }
)

# ---- ejecutar ----
=0
foreach( in ){
  ++
  Write-Host ""
  Write-Host ("-- Try {0}: {1}" -f , .note)
  Write-Host ("Body: " + (J .body))
  {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}} = POST-WR "/pos/coupon/validate" .body
  Write-Host ("Status: {0}" -f ((n/a)))
  if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok -and {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
    Write-Host "(JSON)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Got 200 with note: "
    exit 0
  } elseif ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok) {
    Write-Host "(TEXT)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Non-JSON 2xx with note: "
    exit 0
  } else {
    if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
      Write-Host "(JSON err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    } else {
      Write-Host "(TEXT err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    }
  }
}

Write-Host ""
Write-Host "== RESULT =="
Write-Host "No 2xx received. See errors above."
exit 10; items= } },
  @{ note="code+sid+oid"; body=@{ code=param(
  [string] = "http://127.0.0.1:8010",
  [string]from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) = "TEST10",
  [int] = 233366,
  [decimal] = 129
)

Write-Host "== T5c: /pos/coupon/validate -- WIDE PROBE =="

function J(){  | ConvertTo-Json -Depth 20 -Compress }

function POST-WR([string], {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}, [hashtable]=){
   = [ordered]@{ ok=False; status=; text=; json= }
  try {
     = Invoke-WebRequest -Method POST -Uri  -Body (J {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}) -ContentType "application/json" -Headers  -ErrorAction Stop
    .ok = True
    .status = .StatusCode.value__
    .text = .Content
    try { .json = .Content | ConvertFrom-Json } catch {}
    return
  } catch {
     = .Exception.Response
    if () {
      try { .status = [int].StatusCode } catch {}
      try {
         = New-Object System.IO.StreamReader(.GetResponseStream())
        from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 = .ReadToEnd()
        .text = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])

        try { .json = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 | ConvertFrom-Json } catch {}
      } catch {}
    } else {
      .text = .Exception.Message
    }
    return
  }
}

# ---- setup: session + draft (para tener session_id/order_id/total) ----
Write-Host ""
Write-Host "-- Setup: open session"
 = @{ pos_id=1; cashier_id=1; opening_cash=0 }
 = POST-WR "/session/open"
if (-not .ok) { Write-Error "session/open failed:  "; exit 1 }
 =
try {
   = .json.sid
  if (-not ) {  = .json.session_id }
  if (-not  -and (.json -is [psobject])) {  = .json.id }
} catch {}
if (-not ) { Write-Error "cannot extract session_id"; exit 2 }
Write-Host ("SID: {0}" -f )

Write-Host ""
Write-Host "-- Setup: draft"
{
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
} = @{
  customer_id   =
  session_id    =
  price_list_id = 1
  items         = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
}
 = POST-WR "/pos/order/draft" {
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
}
if (-not .ok) { Write-Error "draft failed:  "; exit 3 }
 = ;  = ; =
try {
   = .json.order_id; if (-not ) {  = .json.id }
     = .json.total
  = .json.subtotal
} catch {}
Write-Host ("order_id: {0}" -f )
Write-Host ("total: {0}" -f ())

# ---- variantes enriquecidas ----
 = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
 = @(
  @{ note="minimal: code"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) } },
  @{ note="code+customer"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); customer_id= } },
  @{ note="code+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); amount=[decimal] } },
  @{ note="code+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); items= } },
  @{ note="code+sid+oid"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id= } },
  @{ note="code+sid+oid+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0) } },
  @{ note="code+sid+oid+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; items= } },
  @{ note="code+sid+oid+cust"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id= } },
  @{ note="FULL-1: code+sid+oid+cust+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0) } },
  @{ note="FULL-2: +items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0); items= } },
  @{ note="ALT: coupon object"; body=@{ coupon=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) }; session_id=; order_id=; amount=(0) } },
  @{ note="ALT: intent validate_only"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0); validate_only=True } },
  @{ note="ALT: price_list_id"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; price_list_id=1; amount=(0) } }
)

# ---- ejecutar ----
=0
foreach( in ){
  ++
  Write-Host ""
  Write-Host ("-- Try {0}: {1}" -f , .note)
  Write-Host ("Body: " + (J .body))
  {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}} = POST-WR "/pos/coupon/validate" .body
  Write-Host ("Status: {0}" -f ((n/a)))
  if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok -and {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
    Write-Host "(JSON)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Got 200 with note: "
    exit 0
  } elseif ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok) {
    Write-Host "(TEXT)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Non-JSON 2xx with note: "
    exit 0
  } else {
    if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
      Write-Host "(JSON err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    } else {
      Write-Host "(TEXT err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    }
  }
}

Write-Host ""
Write-Host "== RESULT =="
Write-Host "No 2xx received. See errors above."
exit 10; session_id=; order_id= } },
  @{ note="code+sid+oid+amount"; body=@{ code=param(
  [string] = "http://127.0.0.1:8010",
  [string]from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) = "TEST10",
  [int] = 233366,
  [decimal] = 129
)

Write-Host "== T5c: /pos/coupon/validate -- WIDE PROBE =="

function J(){  | ConvertTo-Json -Depth 20 -Compress }

function POST-WR([string], {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}, [hashtable]=){
   = [ordered]@{ ok=False; status=; text=; json= }
  try {
     = Invoke-WebRequest -Method POST -Uri  -Body (J {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}) -ContentType "application/json" -Headers  -ErrorAction Stop
    .ok = True
    .status = .StatusCode.value__
    .text = .Content
    try { .json = .Content | ConvertFrom-Json } catch {}
    return
  } catch {
     = .Exception.Response
    if () {
      try { .status = [int].StatusCode } catch {}
      try {
         = New-Object System.IO.StreamReader(.GetResponseStream())
        from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 = .ReadToEnd()
        .text = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])

        try { .json = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 | ConvertFrom-Json } catch {}
      } catch {}
    } else {
      .text = .Exception.Message
    }
    return
  }
}

# ---- setup: session + draft (para tener session_id/order_id/total) ----
Write-Host ""
Write-Host "-- Setup: open session"
 = @{ pos_id=1; cashier_id=1; opening_cash=0 }
 = POST-WR "/session/open"
if (-not .ok) { Write-Error "session/open failed:  "; exit 1 }
 =
try {
   = .json.sid
  if (-not ) {  = .json.session_id }
  if (-not  -and (.json -is [psobject])) {  = .json.id }
} catch {}
if (-not ) { Write-Error "cannot extract session_id"; exit 2 }
Write-Host ("SID: {0}" -f )

Write-Host ""
Write-Host "-- Setup: draft"
{
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
} = @{
  customer_id   =
  session_id    =
  price_list_id = 1
  items         = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
}
 = POST-WR "/pos/order/draft" {
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
}
if (-not .ok) { Write-Error "draft failed:  "; exit 3 }
 = ;  = ; =
try {
   = .json.order_id; if (-not ) {  = .json.id }
     = .json.total
  = .json.subtotal
} catch {}
Write-Host ("order_id: {0}" -f )
Write-Host ("total: {0}" -f ())

# ---- variantes enriquecidas ----
 = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
 = @(
  @{ note="minimal: code"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) } },
  @{ note="code+customer"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); customer_id= } },
  @{ note="code+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); amount=[decimal] } },
  @{ note="code+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); items= } },
  @{ note="code+sid+oid"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id= } },
  @{ note="code+sid+oid+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0) } },
  @{ note="code+sid+oid+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; items= } },
  @{ note="code+sid+oid+cust"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id= } },
  @{ note="FULL-1: code+sid+oid+cust+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0) } },
  @{ note="FULL-2: +items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0); items= } },
  @{ note="ALT: coupon object"; body=@{ coupon=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) }; session_id=; order_id=; amount=(0) } },
  @{ note="ALT: intent validate_only"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0); validate_only=True } },
  @{ note="ALT: price_list_id"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; price_list_id=1; amount=(0) } }
)

# ---- ejecutar ----
=0
foreach( in ){
  ++
  Write-Host ""
  Write-Host ("-- Try {0}: {1}" -f , .note)
  Write-Host ("Body: " + (J .body))
  {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}} = POST-WR "/pos/coupon/validate" .body
  Write-Host ("Status: {0}" -f ((n/a)))
  if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok -and {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
    Write-Host "(JSON)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Got 200 with note: "
    exit 0
  } elseif ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok) {
    Write-Host "(TEXT)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Non-JSON 2xx with note: "
    exit 0
  } else {
    if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
      Write-Host "(JSON err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    } else {
      Write-Host "(TEXT err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    }
  }
}

Write-Host ""
Write-Host "== RESULT =="
Write-Host "No 2xx received. See errors above."
exit 10; session_id=; order_id=; amount=(0) } },
  @{ note="code+sid+oid+items"; body=@{ code=param(
  [string] = "http://127.0.0.1:8010",
  [string]from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) = "TEST10",
  [int] = 233366,
  [decimal] = 129
)

Write-Host "== T5c: /pos/coupon/validate -- WIDE PROBE =="

function J(){  | ConvertTo-Json -Depth 20 -Compress }

function POST-WR([string], {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}, [hashtable]=){
   = [ordered]@{ ok=False; status=; text=; json= }
  try {
     = Invoke-WebRequest -Method POST -Uri  -Body (J {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}) -ContentType "application/json" -Headers  -ErrorAction Stop
    .ok = True
    .status = .StatusCode.value__
    .text = .Content
    try { .json = .Content | ConvertFrom-Json } catch {}
    return
  } catch {
     = .Exception.Response
    if () {
      try { .status = [int].StatusCode } catch {}
      try {
         = New-Object System.IO.StreamReader(.GetResponseStream())
        from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 = .ReadToEnd()
        .text = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])

        try { .json = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 | ConvertFrom-Json } catch {}
      } catch {}
    } else {
      .text = .Exception.Message
    }
    return
  }
}

# ---- setup: session + draft (para tener session_id/order_id/total) ----
Write-Host ""
Write-Host "-- Setup: open session"
 = @{ pos_id=1; cashier_id=1; opening_cash=0 }
 = POST-WR "/session/open"
if (-not .ok) { Write-Error "session/open failed:  "; exit 1 }
 =
try {
   = .json.sid
  if (-not ) {  = .json.session_id }
  if (-not  -and (.json -is [psobject])) {  = .json.id }
} catch {}
if (-not ) { Write-Error "cannot extract session_id"; exit 2 }
Write-Host ("SID: {0}" -f )

Write-Host ""
Write-Host "-- Setup: draft"
{
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
} = @{
  customer_id   =
  session_id    =
  price_list_id = 1
  items         = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
}
 = POST-WR "/pos/order/draft" {
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
}
if (-not .ok) { Write-Error "draft failed:  "; exit 3 }
 = ;  = ; =
try {
   = .json.order_id; if (-not ) {  = .json.id }
     = .json.total
  = .json.subtotal
} catch {}
Write-Host ("order_id: {0}" -f )
Write-Host ("total: {0}" -f ())

# ---- variantes enriquecidas ----
 = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
 = @(
  @{ note="minimal: code"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) } },
  @{ note="code+customer"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); customer_id= } },
  @{ note="code+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); amount=[decimal] } },
  @{ note="code+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); items= } },
  @{ note="code+sid+oid"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id= } },
  @{ note="code+sid+oid+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0) } },
  @{ note="code+sid+oid+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; items= } },
  @{ note="code+sid+oid+cust"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id= } },
  @{ note="FULL-1: code+sid+oid+cust+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0) } },
  @{ note="FULL-2: +items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0); items= } },
  @{ note="ALT: coupon object"; body=@{ coupon=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) }; session_id=; order_id=; amount=(0) } },
  @{ note="ALT: intent validate_only"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0); validate_only=True } },
  @{ note="ALT: price_list_id"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; price_list_id=1; amount=(0) } }
)

# ---- ejecutar ----
=0
foreach( in ){
  ++
  Write-Host ""
  Write-Host ("-- Try {0}: {1}" -f , .note)
  Write-Host ("Body: " + (J .body))
  {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}} = POST-WR "/pos/coupon/validate" .body
  Write-Host ("Status: {0}" -f ((n/a)))
  if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok -and {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
    Write-Host "(JSON)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Got 200 with note: "
    exit 0
  } elseif ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok) {
    Write-Host "(TEXT)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Non-JSON 2xx with note: "
    exit 0
  } else {
    if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
      Write-Host "(JSON err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    } else {
      Write-Host "(TEXT err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    }
  }
}

Write-Host ""
Write-Host "== RESULT =="
Write-Host "No 2xx received. See errors above."
exit 10; session_id=; order_id=; items= } },
  @{ note="code+sid+oid+cust"; body=@{ code=param(
  [string] = "http://127.0.0.1:8010",
  [string]from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) = "TEST10",
  [int] = 233366,
  [decimal] = 129
)

Write-Host "== T5c: /pos/coupon/validate -- WIDE PROBE =="

function J(){  | ConvertTo-Json -Depth 20 -Compress }

function POST-WR([string], {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}, [hashtable]=){
   = [ordered]@{ ok=False; status=; text=; json= }
  try {
     = Invoke-WebRequest -Method POST -Uri  -Body (J {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}) -ContentType "application/json" -Headers  -ErrorAction Stop
    .ok = True
    .status = .StatusCode.value__
    .text = .Content
    try { .json = .Content | ConvertFrom-Json } catch {}
    return
  } catch {
     = .Exception.Response
    if () {
      try { .status = [int].StatusCode } catch {}
      try {
         = New-Object System.IO.StreamReader(.GetResponseStream())
        from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 = .ReadToEnd()
        .text = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])

        try { .json = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 | ConvertFrom-Json } catch {}
      } catch {}
    } else {
      .text = .Exception.Message
    }
    return
  }
}

# ---- setup: session + draft (para tener session_id/order_id/total) ----
Write-Host ""
Write-Host "-- Setup: open session"
 = @{ pos_id=1; cashier_id=1; opening_cash=0 }
 = POST-WR "/session/open"
if (-not .ok) { Write-Error "session/open failed:  "; exit 1 }
 =
try {
   = .json.sid
  if (-not ) {  = .json.session_id }
  if (-not  -and (.json -is [psobject])) {  = .json.id }
} catch {}
if (-not ) { Write-Error "cannot extract session_id"; exit 2 }
Write-Host ("SID: {0}" -f )

Write-Host ""
Write-Host "-- Setup: draft"
{
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
} = @{
  customer_id   =
  session_id    =
  price_list_id = 1
  items         = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
}
 = POST-WR "/pos/order/draft" {
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
}
if (-not .ok) { Write-Error "draft failed:  "; exit 3 }
 = ;  = ; =
try {
   = .json.order_id; if (-not ) {  = .json.id }
     = .json.total
  = .json.subtotal
} catch {}
Write-Host ("order_id: {0}" -f )
Write-Host ("total: {0}" -f ())

# ---- variantes enriquecidas ----
 = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
 = @(
  @{ note="minimal: code"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) } },
  @{ note="code+customer"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); customer_id= } },
  @{ note="code+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); amount=[decimal] } },
  @{ note="code+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); items= } },
  @{ note="code+sid+oid"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id= } },
  @{ note="code+sid+oid+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0) } },
  @{ note="code+sid+oid+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; items= } },
  @{ note="code+sid+oid+cust"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id= } },
  @{ note="FULL-1: code+sid+oid+cust+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0) } },
  @{ note="FULL-2: +items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0); items= } },
  @{ note="ALT: coupon object"; body=@{ coupon=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) }; session_id=; order_id=; amount=(0) } },
  @{ note="ALT: intent validate_only"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0); validate_only=True } },
  @{ note="ALT: price_list_id"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; price_list_id=1; amount=(0) } }
)

# ---- ejecutar ----
=0
foreach( in ){
  ++
  Write-Host ""
  Write-Host ("-- Try {0}: {1}" -f , .note)
  Write-Host ("Body: " + (J .body))
  {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}} = POST-WR "/pos/coupon/validate" .body
  Write-Host ("Status: {0}" -f ((n/a)))
  if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok -and {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
    Write-Host "(JSON)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Got 200 with note: "
    exit 0
  } elseif ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok) {
    Write-Host "(TEXT)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Non-JSON 2xx with note: "
    exit 0
  } else {
    if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
      Write-Host "(JSON err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    } else {
      Write-Host "(TEXT err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    }
  }
}

Write-Host ""
Write-Host "== RESULT =="
Write-Host "No 2xx received. See errors above."
exit 10; session_id=; order_id=; customer_id= } },
  @{ note="FULL-1: code+sid+oid+cust+amount"; body=@{ code=param(
  [string] = "http://127.0.0.1:8010",
  [string]from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) = "TEST10",
  [int] = 233366,
  [decimal] = 129
)

Write-Host "== T5c: /pos/coupon/validate -- WIDE PROBE =="

function J(){  | ConvertTo-Json -Depth 20 -Compress }

function POST-WR([string], {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}, [hashtable]=){
   = [ordered]@{ ok=False; status=; text=; json= }
  try {
     = Invoke-WebRequest -Method POST -Uri  -Body (J {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}) -ContentType "application/json" -Headers  -ErrorAction Stop
    .ok = True
    .status = .StatusCode.value__
    .text = .Content
    try { .json = .Content | ConvertFrom-Json } catch {}
    return
  } catch {
     = .Exception.Response
    if () {
      try { .status = [int].StatusCode } catch {}
      try {
         = New-Object System.IO.StreamReader(.GetResponseStream())
        from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 = .ReadToEnd()
        .text = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])

        try { .json = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 | ConvertFrom-Json } catch {}
      } catch {}
    } else {
      .text = .Exception.Message
    }
    return
  }
}

# ---- setup: session + draft (para tener session_id/order_id/total) ----
Write-Host ""
Write-Host "-- Setup: open session"
 = @{ pos_id=1; cashier_id=1; opening_cash=0 }
 = POST-WR "/session/open"
if (-not .ok) { Write-Error "session/open failed:  "; exit 1 }
 =
try {
   = .json.sid
  if (-not ) {  = .json.session_id }
  if (-not  -and (.json -is [psobject])) {  = .json.id }
} catch {}
if (-not ) { Write-Error "cannot extract session_id"; exit 2 }
Write-Host ("SID: {0}" -f )

Write-Host ""
Write-Host "-- Setup: draft"
{
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
} = @{
  customer_id   =
  session_id    =
  price_list_id = 1
  items         = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
}
 = POST-WR "/pos/order/draft" {
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
}
if (-not .ok) { Write-Error "draft failed:  "; exit 3 }
 = ;  = ; =
try {
   = .json.order_id; if (-not ) {  = .json.id }
     = .json.total
  = .json.subtotal
} catch {}
Write-Host ("order_id: {0}" -f )
Write-Host ("total: {0}" -f ())

# ---- variantes enriquecidas ----
 = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
 = @(
  @{ note="minimal: code"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) } },
  @{ note="code+customer"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); customer_id= } },
  @{ note="code+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); amount=[decimal] } },
  @{ note="code+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); items= } },
  @{ note="code+sid+oid"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id= } },
  @{ note="code+sid+oid+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0) } },
  @{ note="code+sid+oid+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; items= } },
  @{ note="code+sid+oid+cust"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id= } },
  @{ note="FULL-1: code+sid+oid+cust+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0) } },
  @{ note="FULL-2: +items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0); items= } },
  @{ note="ALT: coupon object"; body=@{ coupon=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) }; session_id=; order_id=; amount=(0) } },
  @{ note="ALT: intent validate_only"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0); validate_only=True } },
  @{ note="ALT: price_list_id"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; price_list_id=1; amount=(0) } }
)

# ---- ejecutar ----
=0
foreach( in ){
  ++
  Write-Host ""
  Write-Host ("-- Try {0}: {1}" -f , .note)
  Write-Host ("Body: " + (J .body))
  {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}} = POST-WR "/pos/coupon/validate" .body
  Write-Host ("Status: {0}" -f ((n/a)))
  if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok -and {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
    Write-Host "(JSON)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Got 200 with note: "
    exit 0
  } elseif ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok) {
    Write-Host "(TEXT)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Non-JSON 2xx with note: "
    exit 0
  } else {
    if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
      Write-Host "(JSON err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    } else {
      Write-Host "(TEXT err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    }
  }
}

Write-Host ""
Write-Host "== RESULT =="
Write-Host "No 2xx received. See errors above."
exit 10; session_id=; order_id=; customer_id=; amount=(0) } },
  @{ note="FULL-2: +items"; body=@{ code=param(
  [string] = "http://127.0.0.1:8010",
  [string]from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) = "TEST10",
  [int] = 233366,
  [decimal] = 129
)

Write-Host "== T5c: /pos/coupon/validate -- WIDE PROBE =="

function J(){  | ConvertTo-Json -Depth 20 -Compress }

function POST-WR([string], {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}, [hashtable]=){
   = [ordered]@{ ok=False; status=; text=; json= }
  try {
     = Invoke-WebRequest -Method POST -Uri  -Body (J {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}) -ContentType "application/json" -Headers  -ErrorAction Stop
    .ok = True
    .status = .StatusCode.value__
    .text = .Content
    try { .json = .Content | ConvertFrom-Json } catch {}
    return
  } catch {
     = .Exception.Response
    if () {
      try { .status = [int].StatusCode } catch {}
      try {
         = New-Object System.IO.StreamReader(.GetResponseStream())
        from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 = .ReadToEnd()
        .text = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])

        try { .json = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 | ConvertFrom-Json } catch {}
      } catch {}
    } else {
      .text = .Exception.Message
    }
    return
  }
}

# ---- setup: session + draft (para tener session_id/order_id/total) ----
Write-Host ""
Write-Host "-- Setup: open session"
 = @{ pos_id=1; cashier_id=1; opening_cash=0 }
 = POST-WR "/session/open"
if (-not .ok) { Write-Error "session/open failed:  "; exit 1 }
 =
try {
   = .json.sid
  if (-not ) {  = .json.session_id }
  if (-not  -and (.json -is [psobject])) {  = .json.id }
} catch {}
if (-not ) { Write-Error "cannot extract session_id"; exit 2 }
Write-Host ("SID: {0}" -f )

Write-Host ""
Write-Host "-- Setup: draft"
{
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
} = @{
  customer_id   =
  session_id    =
  price_list_id = 1
  items         = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
}
 = POST-WR "/pos/order/draft" {
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
}
if (-not .ok) { Write-Error "draft failed:  "; exit 3 }
 = ;  = ; =
try {
   = .json.order_id; if (-not ) {  = .json.id }
     = .json.total
  = .json.subtotal
} catch {}
Write-Host ("order_id: {0}" -f )
Write-Host ("total: {0}" -f ())

# ---- variantes enriquecidas ----
 = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
 = @(
  @{ note="minimal: code"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) } },
  @{ note="code+customer"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); customer_id= } },
  @{ note="code+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); amount=[decimal] } },
  @{ note="code+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); items= } },
  @{ note="code+sid+oid"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id= } },
  @{ note="code+sid+oid+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0) } },
  @{ note="code+sid+oid+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; items= } },
  @{ note="code+sid+oid+cust"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id= } },
  @{ note="FULL-1: code+sid+oid+cust+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0) } },
  @{ note="FULL-2: +items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0); items= } },
  @{ note="ALT: coupon object"; body=@{ coupon=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) }; session_id=; order_id=; amount=(0) } },
  @{ note="ALT: intent validate_only"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0); validate_only=True } },
  @{ note="ALT: price_list_id"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; price_list_id=1; amount=(0) } }
)

# ---- ejecutar ----
=0
foreach( in ){
  ++
  Write-Host ""
  Write-Host ("-- Try {0}: {1}" -f , .note)
  Write-Host ("Body: " + (J .body))
  {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}} = POST-WR "/pos/coupon/validate" .body
  Write-Host ("Status: {0}" -f ((n/a)))
  if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok -and {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
    Write-Host "(JSON)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Got 200 with note: "
    exit 0
  } elseif ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok) {
    Write-Host "(TEXT)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Non-JSON 2xx with note: "
    exit 0
  } else {
    if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
      Write-Host "(JSON err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    } else {
      Write-Host "(TEXT err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    }
  }
}

Write-Host ""
Write-Host "== RESULT =="
Write-Host "No 2xx received. See errors above."
exit 10; session_id=; order_id=; customer_id=; amount=(0); items= } },
  @{ note="ALT: coupon object"; body=@{ coupon=@{ code=param(
  [string] = "http://127.0.0.1:8010",
  [string]from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) = "TEST10",
  [int] = 233366,
  [decimal] = 129
)

Write-Host "== T5c: /pos/coupon/validate -- WIDE PROBE =="

function J(){  | ConvertTo-Json -Depth 20 -Compress }

function POST-WR([string], {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}, [hashtable]=){
   = [ordered]@{ ok=False; status=; text=; json= }
  try {
     = Invoke-WebRequest -Method POST -Uri  -Body (J {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}) -ContentType "application/json" -Headers  -ErrorAction Stop
    .ok = True
    .status = .StatusCode.value__
    .text = .Content
    try { .json = .Content | ConvertFrom-Json } catch {}
    return
  } catch {
     = .Exception.Response
    if () {
      try { .status = [int].StatusCode } catch {}
      try {
         = New-Object System.IO.StreamReader(.GetResponseStream())
        from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 = .ReadToEnd()
        .text = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])

        try { .json = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 | ConvertFrom-Json } catch {}
      } catch {}
    } else {
      .text = .Exception.Message
    }
    return
  }
}

# ---- setup: session + draft (para tener session_id/order_id/total) ----
Write-Host ""
Write-Host "-- Setup: open session"
 = @{ pos_id=1; cashier_id=1; opening_cash=0 }
 = POST-WR "/session/open"
if (-not .ok) { Write-Error "session/open failed:  "; exit 1 }
 =
try {
   = .json.sid
  if (-not ) {  = .json.session_id }
  if (-not  -and (.json -is [psobject])) {  = .json.id }
} catch {}
if (-not ) { Write-Error "cannot extract session_id"; exit 2 }
Write-Host ("SID: {0}" -f )

Write-Host ""
Write-Host "-- Setup: draft"
{
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
} = @{
  customer_id   =
  session_id    =
  price_list_id = 1
  items         = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
}
 = POST-WR "/pos/order/draft" {
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
}
if (-not .ok) { Write-Error "draft failed:  "; exit 3 }
 = ;  = ; =
try {
   = .json.order_id; if (-not ) {  = .json.id }
     = .json.total
  = .json.subtotal
} catch {}
Write-Host ("order_id: {0}" -f )
Write-Host ("total: {0}" -f ())

# ---- variantes enriquecidas ----
 = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
 = @(
  @{ note="minimal: code"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) } },
  @{ note="code+customer"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); customer_id= } },
  @{ note="code+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); amount=[decimal] } },
  @{ note="code+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); items= } },
  @{ note="code+sid+oid"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id= } },
  @{ note="code+sid+oid+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0) } },
  @{ note="code+sid+oid+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; items= } },
  @{ note="code+sid+oid+cust"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id= } },
  @{ note="FULL-1: code+sid+oid+cust+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0) } },
  @{ note="FULL-2: +items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0); items= } },
  @{ note="ALT: coupon object"; body=@{ coupon=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) }; session_id=; order_id=; amount=(0) } },
  @{ note="ALT: intent validate_only"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0); validate_only=True } },
  @{ note="ALT: price_list_id"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; price_list_id=1; amount=(0) } }
)

# ---- ejecutar ----
=0
foreach( in ){
  ++
  Write-Host ""
  Write-Host ("-- Try {0}: {1}" -f , .note)
  Write-Host ("Body: " + (J .body))
  {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}} = POST-WR "/pos/coupon/validate" .body
  Write-Host ("Status: {0}" -f ((n/a)))
  if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok -and {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
    Write-Host "(JSON)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Got 200 with note: "
    exit 0
  } elseif ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok) {
    Write-Host "(TEXT)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Non-JSON 2xx with note: "
    exit 0
  } else {
    if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
      Write-Host "(JSON err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    } else {
      Write-Host "(TEXT err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    }
  }
}

Write-Host ""
Write-Host "== RESULT =="
Write-Host "No 2xx received. See errors above."
exit 10 }; session_id=; order_id=; amount=(0) } },
  @{ note="ALT: validate_only"; body=@{ code=param(
  [string] = "http://127.0.0.1:8010",
  [string]from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) = "TEST10",
  [int] = 233366,
  [decimal] = 129
)

Write-Host "== T5c: /pos/coupon/validate -- WIDE PROBE =="

function J(){  | ConvertTo-Json -Depth 20 -Compress }

function POST-WR([string], {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}, [hashtable]=){
   = [ordered]@{ ok=False; status=; text=; json= }
  try {
     = Invoke-WebRequest -Method POST -Uri  -Body (J {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}) -ContentType "application/json" -Headers  -ErrorAction Stop
    .ok = True
    .status = .StatusCode.value__
    .text = .Content
    try { .json = .Content | ConvertFrom-Json } catch {}
    return
  } catch {
     = .Exception.Response
    if () {
      try { .status = [int].StatusCode } catch {}
      try {
         = New-Object System.IO.StreamReader(.GetResponseStream())
        from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 = .ReadToEnd()
        .text = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])

        try { .json = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 | ConvertFrom-Json } catch {}
      } catch {}
    } else {
      .text = .Exception.Message
    }
    return
  }
}

# ---- setup: session + draft (para tener session_id/order_id/total) ----
Write-Host ""
Write-Host "-- Setup: open session"
 = @{ pos_id=1; cashier_id=1; opening_cash=0 }
 = POST-WR "/session/open"
if (-not .ok) { Write-Error "session/open failed:  "; exit 1 }
 =
try {
   = .json.sid
  if (-not ) {  = .json.session_id }
  if (-not  -and (.json -is [psobject])) {  = .json.id }
} catch {}
if (-not ) { Write-Error "cannot extract session_id"; exit 2 }
Write-Host ("SID: {0}" -f )

Write-Host ""
Write-Host "-- Setup: draft"
{
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
} = @{
  customer_id   =
  session_id    =
  price_list_id = 1
  items         = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
}
 = POST-WR "/pos/order/draft" {
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
}
if (-not .ok) { Write-Error "draft failed:  "; exit 3 }
 = ;  = ; =
try {
   = .json.order_id; if (-not ) {  = .json.id }
     = .json.total
  = .json.subtotal
} catch {}
Write-Host ("order_id: {0}" -f )
Write-Host ("total: {0}" -f ())

# ---- variantes enriquecidas ----
 = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
 = @(
  @{ note="minimal: code"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) } },
  @{ note="code+customer"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); customer_id= } },
  @{ note="code+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); amount=[decimal] } },
  @{ note="code+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); items= } },
  @{ note="code+sid+oid"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id= } },
  @{ note="code+sid+oid+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0) } },
  @{ note="code+sid+oid+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; items= } },
  @{ note="code+sid+oid+cust"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id= } },
  @{ note="FULL-1: code+sid+oid+cust+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0) } },
  @{ note="FULL-2: +items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0); items= } },
  @{ note="ALT: coupon object"; body=@{ coupon=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) }; session_id=; order_id=; amount=(0) } },
  @{ note="ALT: intent validate_only"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0); validate_only=True } },
  @{ note="ALT: price_list_id"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; price_list_id=1; amount=(0) } }
)

# ---- ejecutar ----
=0
foreach( in ){
  ++
  Write-Host ""
  Write-Host ("-- Try {0}: {1}" -f , .note)
  Write-Host ("Body: " + (J .body))
  {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}} = POST-WR "/pos/coupon/validate" .body
  Write-Host ("Status: {0}" -f ((n/a)))
  if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok -and {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
    Write-Host "(JSON)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Got 200 with note: "
    exit 0
  } elseif ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok) {
    Write-Host "(TEXT)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Non-JSON 2xx with note: "
    exit 0
  } else {
    if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
      Write-Host "(JSON err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    } else {
      Write-Host "(TEXT err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    }
  }
}

Write-Host ""
Write-Host "== RESULT =="
Write-Host "No 2xx received. See errors above."
exit 10; session_id=; order_id=; amount=(0); validate_only=True } },
  @{ note="ALT: price_list_id"; body=@{ code=param(
  [string] = "http://127.0.0.1:8010",
  [string]from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) = "TEST10",
  [int] = 233366,
  [decimal] = 129
)

Write-Host "== T5c: /pos/coupon/validate -- WIDE PROBE =="

function J(){  | ConvertTo-Json -Depth 20 -Compress }

function POST-WR([string], {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}, [hashtable]=){
   = [ordered]@{ ok=False; status=; text=; json= }
  try {
     = Invoke-WebRequest -Method POST -Uri  -Body (J {
  "terminal_id": 1,
  "store_id": 1,
  "opening_cash": 0
}) -ContentType "application/json" -Headers  -ErrorAction Stop
    .ok = True
    .status = .StatusCode.value__
    .text = .Content
    try { .json = .Content | ConvertFrom-Json } catch {}
    return
  } catch {
     = .Exception.Response
    if () {
      try { .status = [int].StatusCode } catch {}
      try {
         = New-Object System.IO.StreamReader(.GetResponseStream())
        from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 = .ReadToEnd()
        .text = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])

        try { .json = from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"])
 | ConvertFrom-Json } catch {}
      } catch {}
    } else {
      .text = .Exception.Message
    }
    return
  }
}

# ---- setup: session + draft (para tener session_id/order_id/total) ----
Write-Host ""
Write-Host "-- Setup: open session"
 = @{ pos_id=1; cashier_id=1; opening_cash=0 }
 = POST-WR "/session/open"
if (-not .ok) { Write-Error "session/open failed:  "; exit 1 }
 =
try {
   = .json.sid
  if (-not ) {  = .json.session_id }
  if (-not  -and (.json -is [psobject])) {  = .json.id }
} catch {}
if (-not ) { Write-Error "cannot extract session_id"; exit 2 }
Write-Host ("SID: {0}" -f )

Write-Host ""
Write-Host "-- Setup: draft"
{
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
} = @{
  customer_id   =
  session_id    =
  price_list_id = 1
  items         = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
}
 = POST-WR "/pos/order/draft" {
  "session_id": 21,
  "items": [
    {
      "product_id": 1,
      "qty": 1
    }
  ],
  "price_list_id": 1
}
if (-not .ok) { Write-Error "draft failed:  "; exit 3 }
 = ;  = ; =
try {
   = .json.order_id; if (-not ) {  = .json.id }
     = .json.total
  = .json.subtotal
} catch {}
Write-Host ("order_id: {0}" -f )
Write-Host ("total: {0}" -f ())

# ---- variantes enriquecidas ----
 = @(@{ product_id=1; qty=1; unit_price=[decimal]; price=[decimal] })
 = @(
  @{ note="minimal: code"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) } },
  @{ note="code+customer"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); customer_id= } },
  @{ note="code+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); amount=[decimal] } },
  @{ note="code+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); items= } },
  @{ note="code+sid+oid"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id= } },
  @{ note="code+sid+oid+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0) } },
  @{ note="code+sid+oid+items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; items= } },
  @{ note="code+sid+oid+cust"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id= } },
  @{ note="FULL-1: code+sid+oid+cust+amount"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0) } },
  @{ note="FULL-2: +items"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; customer_id=; amount=(0); items= } },
  @{ note="ALT: coupon object"; body=@{ coupon=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]) }; session_id=; order_id=; amount=(0) } },
  @{ note="ALT: intent validate_only"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; amount=(0); validate_only=True } },
  @{ note="ALT: price_list_id"; body=@{ code=from fastapi import FastAPI
from .db import Base, engine

# IMPORTA MODELOS antes de create_all
from .models import product as _product_models
from .models import pos as _pos_models
from .models import coupon as _coupon_models
from .models import segment as _segment_models
from .models import pos_session as _pos_session_models
from .models import customer as _customer_models

# Crea tablas faltantes (desarrollo)
Base.metadata.create_all(bind=engine)

app = FastAPI(title="ERP POS")

# Salud
@app.get("/health")
def health():
    return {"ok": True}

# Routers principales
from .routers import ui as ui_router
from .routers import session as session_router
from .routers import pos as pos_router
from .routers import coupon as coupon_router
from .routers import wallet as wallet_router

# UI simple
app.include_router(ui_router.router)

# Caja/sesión SOLO bajo /session (para no duplicar y evitar 404 en el botón)
app.include_router(session_router.router, prefix="/session", tags=["session"])

# POS: órdenes/pagos bajo /pos/order
app.include_router(pos_router.router, prefix="/pos/order", tags=["pos"])

# Cupones bajo /pos/coupon
app.include_router(coupon_router.router, prefix="/pos/coupon", tags=["coupon"])

# Wallet (CRM) y reportes
app.include_router(wallet_router.router,   prefix="/crm",     tags=["wallet"])
app.include_router(wallet_router.reports, prefix="/reports", tags=["reports"]); session_id=; order_id=; price_list_id=1; amount=(0) } }
)

# ---- ejecutar ----
=0
foreach( in ){
  ++
  Write-Host ""
  Write-Host ("-- Try {0}: {1}" -f , .note)
  Write-Host ("Body: " + (J .body))
  {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}} = POST-WR "/pos/coupon/validate" .body
  Write-Host ("Status: {0}" -f ((n/a)))
  if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok -and {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
    Write-Host "(JSON)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Got 200 with note: "
    exit 0
  } elseif ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok) {
    Write-Host "(TEXT)"
    {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host "OK: Non-JSON 2xx with note: "
    exit 0
  } else {
    if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
      Write-Host "(JSON err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    } else {
      Write-Host "(TEXT err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    }
  }
}

Write-Host ""
Write-Host "== RESULT =="
Write-Host "No 2xx received. See errors above."
exit 10; session_id=; order_id=; price_list_id=1; amount=(0) } }
)

# ---- run ----
=0
foreach( in ){
  ++
  Write-Host ""
  Write-Host ("-- Try {0}: {1}" -f , .note)
  Write-Host ("Body: " + (J .body))
  {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}} = POST-WR "/pos/coupon/validate" .body
  Write-Host ("Status: {0}" -f ((n/a)))
  Write-Host ("Content-Type: {0}" -f ((n/a)))

  if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.ok) {
    if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
      Write-Host "(JSON)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    } else {
      Write-Host "(TEXT)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    }
    Write-Host ""
    Write-Host "== RESULT =="
    Write-Host ("OK: {0}" -f .note)
    exit 0
  } else {
    if ({"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json) {
      Write-Host "(JSON err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.json | Out-String | Write-Host
    } else {
      Write-Host "(TEXT err)"
      {"openapi":"3.1.0","info":{"title":"ERP POS","version":"0.1.0"},"paths":{"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Home","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/session/session/open":{"post":{"tags":["session","pos-session"],"summary":"Open Session","operationId":"open_session_session_session_open_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/cash-count":{"post":{"tags":["session","pos-session"],"summary":"Cash Count","operationId":"cash_count_session_session_cash_count_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/{sid}/resume":{"get":{"tags":["session","pos-session"],"summary":"Resume Session","operationId":"resume_session_session_session__sid__resume_get","parameters":[{"name":"sid","in":"path","required":true,"schema":{"type":"integer","title":"Sid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/session/close":{"post":{"tags":["session","pos-session"],"summary":"Close Session","description":"Cierra la sesi??n:\n- session_id requerido\n- Si viene total/amount, registra un cash_count(stage='final') antes de cerrar.\n- Idempotente: si ya est?? cerrada, devuelve el resumen actual.","operationId":"close_session_session_session_close_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/draft":{"post":{"tags":["pos"],"summary":"Create Order Draft","operationId":"create_order_draft_pos_order_draft_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DraftOrderRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/pay":{"post":{"tags":["pos"],"summary":"Pay Order","operationId":"pay_order_pos_order_pay_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/order/undo":{"post":{"tags":["pos"],"summary":"Undo Order","operationId":"undo_order_pos_order_undo_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UndoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pos/coupon/validate":{"post":{"tags":["coupon"],"summary":"Validate Coupon","operationId":"validate_coupon_pos_coupon_validate_post","parameters":[{"name":"X-User","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"demo","title":"X-User"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateBody"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/link":{"post":{"tags":["wallet"],"summary":"Link Wallet","operationId":"link_wallet_crm_wallet_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/{customer_id}/balance":{"get":{"tags":["wallet"],"summary":"Balance","operationId":"balance_crm_wallet__customer_id__balance_get","parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/deposit":{"post":{"tags":["wallet"],"summary":"Deposit","operationId":"deposit_crm_wallet_deposit_post","parameters":[{"name":"x-idempotency-key","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"X-Idempotency-Key"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositReq"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crm/wallet/apply-calc":{"post":{"tags":["wallet"],"summary":"Apply Calc","operationId":"apply_calc_crm_wallet_apply_calc_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplyCalcReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reports/wallet/daily":{"get":{"tags":["reports"],"summary":"Wallet Daily","operationId":"wallet_daily_reports_wallet_daily_get","parameters":[{"name":"date_str","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date Str"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ApplyCalcReq":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["order_id","customer_id"],"title":"ApplyCalcReq"},"DepositReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"amount":{"type":"number","exclusiveMinimum":0.0,"title":"Amount"},"reason":{"type":"string","title":"Reason","default":"manual"},"by_user":{"type":"string","title":"By User","default":"demo"}},"type":"object","required":["customer_id","amount"],"title":"DepositReq"},"DraftItem":{"properties":{"product_id":{"type":"integer","title":"Product Id"},"qty":{"type":"number","title":"Qty"}},"type":"object","required":["product_id","qty"],"title":"DraftItem"},"DraftOrderRequest":{"properties":{"session_id":{"type":"integer","title":"Session Id"},"price_list_id":{"type":"integer","title":"Price List Id"},"items":{"items":{"$ref":"#/components/schemas/DraftItem"},"type":"array","minItems":1,"title":"Items"},"location_code":{"type":"string","title":"Location Code","default":"MAIN"}},"type":"object","required":["session_id","price_list_id","items"],"title":"DraftOrderRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LinkReq":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["customer_id"],"title":"LinkReq"},"PayRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"},"splits":{"items":{"$ref":"#/components/schemas/PaymentSplit"},"type":"array","minItems":1,"title":"Splits"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"wallet_apply":{"type":"number","title":"Wallet Apply","default":0.0}},"type":"object","required":["order_id","splits"],"title":"PayRequest"},"PaymentSplit":{"properties":{"method":{"type":"string","enum":["cash","card","wallet"],"title":"Method"},"amount":{"type":"number","title":"Amount"}},"type":"object","required":["method","amount"],"title":"PaymentSplit"},"UndoRequest":{"properties":{"order_id":{"type":"integer","title":"Order Id"}},"type":"object","required":["order_id"],"title":"UndoRequest"},"ValidateBody":{"properties":{"code":{"type":"string","title":"Code"},"order_subtotal":{"type":"number","title":"Order Subtotal"},"customer_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Customer Id"},"now_iso":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Now Iso"}},"type":"object","required":["code","order_subtotal"],"title":"ValidateBody"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}.text | Out-String | Write-Host
    }
  }
}

Write-Host ""
Write-Host "== RESULT =="
Write-Host "No 2xx received. See errors above."
exit 10
